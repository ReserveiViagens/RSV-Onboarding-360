# Multi-stage build for RSV 360Â° Ecosystem Master
FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY ECOSYSTEM-MASTER/package*.json ./ECOSYSTEM-MASTER/
COPY INFRASTRUCTURE/package*.json ./INFRASTRUCTURE/

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build the application
RUN npm run build:ecosystem

# Production image, copy all the files and run the app
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV PORT=3000

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 ecosystem

# Copy built application
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/ECOSYSTEM-MASTER ./ECOSYSTEM-MASTER
COPY --from=builder /app/INFRASTRUCTURE ./INFRASTRUCTURE
COPY --from=deps /app/node_modules ./node_modules

# Copy configuration files
COPY --from=builder /app/ecosystem-config.json ./
COPY --from=builder /app/start-ecosystem.js ./

# Set proper permissions
RUN chown -R ecosystem:nodejs /app
USER ecosystem

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Expose port
EXPOSE 3000

# Start the application
CMD ["node", "start-ecosystem.js"]
